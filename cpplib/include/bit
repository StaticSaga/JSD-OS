#ifndef STD_BIT_H
#define STD_BIT_H

#include <type_traits>

namespace std {

    template<class _ToType, class _FromType, class = enable_if_t<
        sizeof(_ToType) == sizeof(_FromType) &&
        is_trivially_copyable_v<_ToType> &&
        is_trivially_copyable_v<_FromType> >>
        constexpr _ToType bit_cast(_FromType const& __from) noexcept {
        return __builtin_bit_cast(_ToType, __from);
    }
}

#endif