     1                                  [bits 32] 
     2                                  [extern idtp]
     3                                  [extern asm_clear_screen]
     4                                  
     5                                  global idt_load
     6                                  idt_load:
     7 00000000 FB                      	sti ;!!!!!!!!!!!!!!!!!THIS ENABLES IRQS DON'T FORGET!!!!!!!!!!!!!!!!!!!!!
     8 00000001 0F011D[00000000]            lidt [idtp]
     9 00000008 C3                      	ret
    10                                  
    11                                  ;make 16 new global irqs
    12                                  %assign i 0
    13                                  %rep 16
    14                                  	global irq %+ i
    15                                  %assign i i+1 
    16                                  %endrep 		
    17                              <1>  global irq %+ i
    18                              <1> %assign i i+1
    19                              <1>  global irq %+ i
    20                              <1> %assign i i+1
    21                              <1>  global irq %+ i
    22                              <1> %assign i i+1
    23                              <1>  global irq %+ i
    24                              <1> %assign i i+1
    25                              <1>  global irq %+ i
    26                              <1> %assign i i+1
    27                              <1>  global irq %+ i
    28                              <1> %assign i i+1
    29                              <1>  global irq %+ i
    30                              <1> %assign i i+1
    31                              <1>  global irq %+ i
    32                              <1> %assign i i+1
    33                              <1>  global irq %+ i
    34                              <1> %assign i i+1
    35                              <1>  global irq %+ i
    36                              <1> %assign i i+1
    37                              <1>  global irq %+ i
    38                              <1> %assign i i+1
    39                              <1>  global irq %+ i
    40                              <1> %assign i i+1
    41                              <1>  global irq %+ i
    42                              <1> %assign i i+1
    43                              <1>  global irq %+ i
    44                              <1> %assign i i+1
    45                              <1>  global irq %+ i
    46                              <1> %assign i i+1
    47                              <1>  global irq %+ i
    48                              <1> %assign i i+1
    49                                  	
    50                                  ;make 32 new global isrs
    51                                  %assign i 0
    52                                  %rep 32
    53                                  	global isr %+ i
    54                                  %assign i i+1 
    55                                  %endrep 	
    56                              <1>  global isr %+ i
    57                              <1> %assign i i+1
    58                              <1>  global isr %+ i
    59                              <1> %assign i i+1
    60                              <1>  global isr %+ i
    61                              <1> %assign i i+1
    62                              <1>  global isr %+ i
    63                              <1> %assign i i+1
    64                              <1>  global isr %+ i
    65                              <1> %assign i i+1
    66                              <1>  global isr %+ i
    67                              <1> %assign i i+1
    68                              <1>  global isr %+ i
    69                              <1> %assign i i+1
    70                              <1>  global isr %+ i
    71                              <1> %assign i i+1
    72                              <1>  global isr %+ i
    73                              <1> %assign i i+1
    74                              <1>  global isr %+ i
    75                              <1> %assign i i+1
    76                              <1>  global isr %+ i
    77                              <1> %assign i i+1
    78                              <1>  global isr %+ i
    79                              <1> %assign i i+1
    80                              <1>  global isr %+ i
    81                              <1> %assign i i+1
    82                              <1>  global isr %+ i
    83                              <1> %assign i i+1
    84                              <1>  global isr %+ i
    85                              <1> %assign i i+1
    86                              <1>  global isr %+ i
    87                              <1> %assign i i+1
    88                              <1>  global isr %+ i
    89                              <1> %assign i i+1
    90                              <1>  global isr %+ i
    91                              <1> %assign i i+1
    92                              <1>  global isr %+ i
    93                              <1> %assign i i+1
    94                              <1>  global isr %+ i
    95                              <1> %assign i i+1
    96                              <1>  global isr %+ i
    97                              <1> %assign i i+1
    98                              <1>  global isr %+ i
    99                              <1> %assign i i+1
   100                              <1>  global isr %+ i
   101                              <1> %assign i i+1
   102                              <1>  global isr %+ i
   103                              <1> %assign i i+1
   104                              <1>  global isr %+ i
   105                              <1> %assign i i+1
   106                              <1>  global isr %+ i
   107                              <1> %assign i i+1
   108                              <1>  global isr %+ i
   109                              <1> %assign i i+1
   110                              <1>  global isr %+ i
   111                              <1> %assign i i+1
   112                              <1>  global isr %+ i
   113                              <1> %assign i i+1
   114                              <1>  global isr %+ i
   115                              <1> %assign i i+1
   116                              <1>  global isr %+ i
   117                              <1> %assign i i+1
   118                              <1>  global isr %+ i
   119                              <1> %assign i i+1
   120                                  
   121                                  %macro isr0_7 1 ;isrs 0-7 will use this definition
   122                                  	isr%1:
   123                                  	cli
   124                                  	push byte 0
   125                                  	push byte %1
   126                                  	jmp isr_common_stub
   127                                  %endmacro	
   128                                  
   129                                  %assign i 0 ;define the first 8 isrs
   130                                  %rep 8
   131                                  	isr0_7 i
   132                                  %assign i i+1 
   133                                  %endrep 	
   134                              <1>  isr0_7 i
   135                              <2>  isr%1:
   136 00000009 FA                  <2>  cli
   137 0000000A 6A00                <2>  push byte 0
   138 0000000C 6A00                <2>  push byte %1
   139 0000000E E9B8000000          <2>  jmp isr_common_stub
   140                              <1> %assign i i+1
   141                              <1>  isr0_7 i
   142                              <2>  isr%1:
   143 00000013 FA                  <2>  cli
   144 00000014 6A00                <2>  push byte 0
   145 00000016 6A01                <2>  push byte %1
   146 00000018 E9AE000000          <2>  jmp isr_common_stub
   147                              <1> %assign i i+1
   148                              <1>  isr0_7 i
   149                              <2>  isr%1:
   150 0000001D FA                  <2>  cli
   151 0000001E 6A00                <2>  push byte 0
   152 00000020 6A02                <2>  push byte %1
   153 00000022 E9A4000000          <2>  jmp isr_common_stub
   154                              <1> %assign i i+1
   155                              <1>  isr0_7 i
   156                              <2>  isr%1:
   157 00000027 FA                  <2>  cli
   158 00000028 6A00                <2>  push byte 0
   159 0000002A 6A03                <2>  push byte %1
   160 0000002C E99A000000          <2>  jmp isr_common_stub
   161                              <1> %assign i i+1
   162                              <1>  isr0_7 i
   163                              <2>  isr%1:
   164 00000031 FA                  <2>  cli
   165 00000032 6A00                <2>  push byte 0
   166 00000034 6A04                <2>  push byte %1
   167 00000036 E990000000          <2>  jmp isr_common_stub
   168                              <1> %assign i i+1
   169                              <1>  isr0_7 i
   170                              <2>  isr%1:
   171 0000003B FA                  <2>  cli
   172 0000003C 6A00                <2>  push byte 0
   173 0000003E 6A05                <2>  push byte %1
   174 00000040 E986000000          <2>  jmp isr_common_stub
   175                              <1> %assign i i+1
   176                              <1>  isr0_7 i
   177                              <2>  isr%1:
   178 00000045 FA                  <2>  cli
   179 00000046 6A00                <2>  push byte 0
   180 00000048 6A06                <2>  push byte %1
   181 0000004A EB7F                <2>  jmp isr_common_stub
   182                              <1> %assign i i+1
   183                              <1>  isr0_7 i
   184                              <2>  isr%1:
   185 0000004C FA                  <2>  cli
   186 0000004D 6A00                <2>  push byte 0
   187 0000004F 6A07                <2>  push byte %1
   188 00000051 EB78                <2>  jmp isr_common_stub
   189                              <1> %assign i i+1
   190                                  
   191                                  %macro isr8_31 1 ;isrs 8-31 will use this definition
   192                                  	isr%1:
   193                                  	cli
   194                                  	push byte %1
   195                                  	jmp isr_common_stub
   196                                  %endmacro	
   197                                  
   198                                  %assign i 8 ;define the next 24 isrs
   199                                  %rep 24
   200                                  	isr8_31 i
   201                                  %assign i i+1 
   202                                  %endrep 
   203                              <1>  isr8_31 i
   204                              <2>  isr%1:
   205 00000053 FA                  <2>  cli
   206 00000054 6A08                <2>  push byte %1
   207 00000056 EB73                <2>  jmp isr_common_stub
   208                              <1> %assign i i+1
   209                              <1>  isr8_31 i
   210                              <2>  isr%1:
   211 00000058 FA                  <2>  cli
   212 00000059 6A09                <2>  push byte %1
   213 0000005B EB6E                <2>  jmp isr_common_stub
   214                              <1> %assign i i+1
   215                              <1>  isr8_31 i
   216                              <2>  isr%1:
   217 0000005D FA                  <2>  cli
   218 0000005E 6A0A                <2>  push byte %1
   219 00000060 EB69                <2>  jmp isr_common_stub
   220                              <1> %assign i i+1
   221                              <1>  isr8_31 i
   222                              <2>  isr%1:
   223 00000062 FA                  <2>  cli
   224 00000063 6A0B                <2>  push byte %1
   225 00000065 EB64                <2>  jmp isr_common_stub
   226                              <1> %assign i i+1
   227                              <1>  isr8_31 i
   228                              <2>  isr%1:
   229 00000067 FA                  <2>  cli
   230 00000068 6A0C                <2>  push byte %1
   231 0000006A EB5F                <2>  jmp isr_common_stub
   232                              <1> %assign i i+1
   233                              <1>  isr8_31 i
   234                              <2>  isr%1:
   235 0000006C FA                  <2>  cli
   236 0000006D 6A0D                <2>  push byte %1
   237 0000006F EB5A                <2>  jmp isr_common_stub
   238                              <1> %assign i i+1
   239                              <1>  isr8_31 i
   240                              <2>  isr%1:
   241 00000071 FA                  <2>  cli
   242 00000072 6A0E                <2>  push byte %1
   243 00000074 EB55                <2>  jmp isr_common_stub
   244                              <1> %assign i i+1
   245                              <1>  isr8_31 i
   246                              <2>  isr%1:
   247 00000076 FA                  <2>  cli
   248 00000077 6A0F                <2>  push byte %1
   249 00000079 EB50                <2>  jmp isr_common_stub
   250                              <1> %assign i i+1
   251                              <1>  isr8_31 i
   252                              <2>  isr%1:
   253 0000007B FA                  <2>  cli
   254 0000007C 6A10                <2>  push byte %1
   255 0000007E EB4B                <2>  jmp isr_common_stub
   256                              <1> %assign i i+1
   257                              <1>  isr8_31 i
   258                              <2>  isr%1:
   259 00000080 FA                  <2>  cli
   260 00000081 6A11                <2>  push byte %1
   261 00000083 EB46                <2>  jmp isr_common_stub
   262                              <1> %assign i i+1
   263                              <1>  isr8_31 i
   264                              <2>  isr%1:
   265 00000085 FA                  <2>  cli
   266 00000086 6A12                <2>  push byte %1
   267 00000088 EB41                <2>  jmp isr_common_stub
   268                              <1> %assign i i+1
   269                              <1>  isr8_31 i
   270                              <2>  isr%1:
   271 0000008A FA                  <2>  cli
   272 0000008B 6A13                <2>  push byte %1
   273 0000008D EB3C                <2>  jmp isr_common_stub
   274                              <1> %assign i i+1
   275                              <1>  isr8_31 i
   276                              <2>  isr%1:
   277 0000008F FA                  <2>  cli
   278 00000090 6A14                <2>  push byte %1
   279 00000092 EB37                <2>  jmp isr_common_stub
   280                              <1> %assign i i+1
   281                              <1>  isr8_31 i
   282                              <2>  isr%1:
   283 00000094 FA                  <2>  cli
   284 00000095 6A15                <2>  push byte %1
   285 00000097 EB32                <2>  jmp isr_common_stub
   286                              <1> %assign i i+1
   287                              <1>  isr8_31 i
   288                              <2>  isr%1:
   289 00000099 FA                  <2>  cli
   290 0000009A 6A16                <2>  push byte %1
   291 0000009C EB2D                <2>  jmp isr_common_stub
   292                              <1> %assign i i+1
   293                              <1>  isr8_31 i
   294                              <2>  isr%1:
   295 0000009E FA                  <2>  cli
   296 0000009F 6A17                <2>  push byte %1
   297 000000A1 EB28                <2>  jmp isr_common_stub
   298                              <1> %assign i i+1
   299                              <1>  isr8_31 i
   300                              <2>  isr%1:
   301 000000A3 FA                  <2>  cli
   302 000000A4 6A18                <2>  push byte %1
   303 000000A6 EB23                <2>  jmp isr_common_stub
   304                              <1> %assign i i+1
   305                              <1>  isr8_31 i
   306                              <2>  isr%1:
   307 000000A8 FA                  <2>  cli
   308 000000A9 6A19                <2>  push byte %1
   309 000000AB EB1E                <2>  jmp isr_common_stub
   310                              <1> %assign i i+1
   311                              <1>  isr8_31 i
   312                              <2>  isr%1:
   313 000000AD FA                  <2>  cli
   314 000000AE 6A1A                <2>  push byte %1
   315 000000B0 EB19                <2>  jmp isr_common_stub
   316                              <1> %assign i i+1
   317                              <1>  isr8_31 i
   318                              <2>  isr%1:
   319 000000B2 FA                  <2>  cli
   320 000000B3 6A1B                <2>  push byte %1
   321 000000B5 EB14                <2>  jmp isr_common_stub
   322                              <1> %assign i i+1
   323                              <1>  isr8_31 i
   324                              <2>  isr%1:
   325 000000B7 FA                  <2>  cli
   326 000000B8 6A1C                <2>  push byte %1
   327 000000BA EB0F                <2>  jmp isr_common_stub
   328                              <1> %assign i i+1
   329                              <1>  isr8_31 i
   330                              <2>  isr%1:
   331 000000BC FA                  <2>  cli
   332 000000BD 6A1D                <2>  push byte %1
   333 000000BF EB0A                <2>  jmp isr_common_stub
   334                              <1> %assign i i+1
   335                              <1>  isr8_31 i
   336                              <2>  isr%1:
   337 000000C1 FA                  <2>  cli
   338 000000C2 6A1E                <2>  push byte %1
   339 000000C4 EB05                <2>  jmp isr_common_stub
   340                              <1> %assign i i+1
   341                              <1>  isr8_31 i
   342                              <2>  isr%1:
   343 000000C6 FA                  <2>  cli
   344 000000C7 6A1F                <2>  push byte %1
   345 000000C9 EB00                <2>  jmp isr_common_stub
   346                              <1> %assign i i+1
   347                                  
   348                                  ; We call a C function in here. We need to let the assembler know
   349                                  ; that '_fault_handler' exists in another file
   350                                  extern fault_handler
   351                                  
   352                                  ; This is our common ISR stub. It saves the processor state, sets
   353                                  ; up for kernel mode segments, calls the C-level fault handler,
   354                                  ; and finally restores the stack frame.
   355                                  isr_common_stub:
   356 000000CB 60                          pusha
   357 000000CC 1E                          push ds
   358 000000CD 06                          push es
   359 000000CE 0FA0                        push fs
   360 000000D0 0FA8                        push gs
   361 000000D2 66B81000                    mov ax, 0x10
   362 000000D6 8ED8                        mov ds, ax
   363 000000D8 8EC0                        mov es, ax
   364 000000DA 8EE0                        mov fs, ax
   365 000000DC 8EE8                        mov gs, ax
   366 000000DE 89E0                        mov eax, esp
   367 000000E0 50                          push eax
   368 000000E1 B8[00000000]                mov eax, fault_handler
   369 000000E6 FFD0                        call eax
   370 000000E8 58                          pop eax
   371 000000E9 0FA9                        pop gs
   372 000000EB 0FA1                        pop fs
   373 000000ED 07                          pop es
   374 000000EE 1F                          pop ds
   375 000000EF 61                          popa
   376 000000F0 83C408                      add esp, 8
   377 000000F3 CF                          iret
   378                                  
   379                                  %macro irq0_15 2
   380                                  	irq%1:
   381                                  	cli
   382                                  	push byte 0
   383                                  	push byte %2
   384                                  	jmp irq_common_stub
   385                                  %endmacro	
   386                                  
   387                                  %assign i 0 ;define the first 15 irqs
   388                                  %rep 16
   389                                  	irq0_15 i, i+32
   390                                  %assign i i+1 
   391                                  %endrep 	
   392                              <1>  irq0_15 i, i+32
   393                              <2>  irq%1:
   394 000000F4 FA                  <2>  cli
   395 000000F5 6A00                <2>  push byte 0
   396 000000F7 6A20                <2>  push byte %2
   397 000000F9 EB69                <2>  jmp irq_common_stub
   398                              <1> %assign i i+1
   399                              <1>  irq0_15 i, i+32
   400                              <2>  irq%1:
   401 000000FB FA                  <2>  cli
   402 000000FC 6A00                <2>  push byte 0
   403 000000FE 6A21                <2>  push byte %2
   404 00000100 EB62                <2>  jmp irq_common_stub
   405                              <1> %assign i i+1
   406                              <1>  irq0_15 i, i+32
   407                              <2>  irq%1:
   408 00000102 FA                  <2>  cli
   409 00000103 6A00                <2>  push byte 0
   410 00000105 6A22                <2>  push byte %2
   411 00000107 EB5B                <2>  jmp irq_common_stub
   412                              <1> %assign i i+1
   413                              <1>  irq0_15 i, i+32
   414                              <2>  irq%1:
   415 00000109 FA                  <2>  cli
   416 0000010A 6A00                <2>  push byte 0
   417 0000010C 6A23                <2>  push byte %2
   418 0000010E EB54                <2>  jmp irq_common_stub
   419                              <1> %assign i i+1
   420                              <1>  irq0_15 i, i+32
   421                              <2>  irq%1:
   422 00000110 FA                  <2>  cli
   423 00000111 6A00                <2>  push byte 0
   424 00000113 6A24                <2>  push byte %2
   425 00000115 EB4D                <2>  jmp irq_common_stub
   426                              <1> %assign i i+1
   427                              <1>  irq0_15 i, i+32
   428                              <2>  irq%1:
   429 00000117 FA                  <2>  cli
   430 00000118 6A00                <2>  push byte 0
   431 0000011A 6A25                <2>  push byte %2
   432 0000011C EB46                <2>  jmp irq_common_stub
   433                              <1> %assign i i+1
   434                              <1>  irq0_15 i, i+32
   435                              <2>  irq%1:
   436 0000011E FA                  <2>  cli
   437 0000011F 6A00                <2>  push byte 0
   438 00000121 6A26                <2>  push byte %2
   439 00000123 EB3F                <2>  jmp irq_common_stub
   440                              <1> %assign i i+1
   441                              <1>  irq0_15 i, i+32
   442                              <2>  irq%1:
   443 00000125 FA                  <2>  cli
   444 00000126 6A00                <2>  push byte 0
   445 00000128 6A27                <2>  push byte %2
   446 0000012A EB38                <2>  jmp irq_common_stub
   447                              <1> %assign i i+1
   448                              <1>  irq0_15 i, i+32
   449                              <2>  irq%1:
   450 0000012C FA                  <2>  cli
   451 0000012D 6A00                <2>  push byte 0
   452 0000012F 6A28                <2>  push byte %2
   453 00000131 EB31                <2>  jmp irq_common_stub
   454                              <1> %assign i i+1
   455                              <1>  irq0_15 i, i+32
   456                              <2>  irq%1:
   457 00000133 FA                  <2>  cli
   458 00000134 6A00                <2>  push byte 0
   459 00000136 6A29                <2>  push byte %2
   460 00000138 EB2A                <2>  jmp irq_common_stub
   461                              <1> %assign i i+1
   462                              <1>  irq0_15 i, i+32
   463                              <2>  irq%1:
   464 0000013A FA                  <2>  cli
   465 0000013B 6A00                <2>  push byte 0
   466 0000013D 6A2A                <2>  push byte %2
   467 0000013F EB23                <2>  jmp irq_common_stub
   468                              <1> %assign i i+1
   469                              <1>  irq0_15 i, i+32
   470                              <2>  irq%1:
   471 00000141 FA                  <2>  cli
   472 00000142 6A00                <2>  push byte 0
   473 00000144 6A2B                <2>  push byte %2
   474 00000146 EB1C                <2>  jmp irq_common_stub
   475                              <1> %assign i i+1
   476                              <1>  irq0_15 i, i+32
   477                              <2>  irq%1:
   478 00000148 FA                  <2>  cli
   479 00000149 6A00                <2>  push byte 0
   480 0000014B 6A2C                <2>  push byte %2
   481 0000014D EB15                <2>  jmp irq_common_stub
   482                              <1> %assign i i+1
   483                              <1>  irq0_15 i, i+32
   484                              <2>  irq%1:
   485 0000014F FA                  <2>  cli
   486 00000150 6A00                <2>  push byte 0
   487 00000152 6A2D                <2>  push byte %2
   488 00000154 EB0E                <2>  jmp irq_common_stub
   489                              <1> %assign i i+1
   490                              <1>  irq0_15 i, i+32
   491                              <2>  irq%1:
   492 00000156 FA                  <2>  cli
   493 00000157 6A00                <2>  push byte 0
   494 00000159 6A2E                <2>  push byte %2
   495 0000015B EB07                <2>  jmp irq_common_stub
   496                              <1> %assign i i+1
   497                              <1>  irq0_15 i, i+32
   498                              <2>  irq%1:
   499 0000015D FA                  <2>  cli
   500 0000015E 6A00                <2>  push byte 0
   501 00000160 6A2F                <2>  push byte %2
   502 00000162 EB00                <2>  jmp irq_common_stub
   503                              <1> %assign i i+1
   504                                  
   505                                  extern irq_handler
   506                                  
   507                                  irq_common_stub:
   508 00000164 60                          pusha
   509 00000165 1E                          push ds
   510 00000166 06                          push es
   511 00000167 0FA0                        push fs
   512 00000169 0FA8                        push gs
   513                                  
   514 0000016B 66B81000                    mov ax, 0x10
   515 0000016F 8ED8                        mov ds, ax
   516 00000171 8EC0                        mov es, ax
   517 00000173 8EE0                        mov fs, ax
   518 00000175 8EE8                        mov gs, ax
   519 00000177 89E0                        mov eax, esp
   520                                  
   521 00000179 50                          push eax
   522 0000017A B8[00000000]                mov eax, irq_handler
   523 0000017F FFD0                        call eax
   524 00000181 58                          pop eax
   525                                  
   526 00000182 0FA9                        pop gs
   527 00000184 0FA1                        pop fs
   528 00000186 07                          pop es
   529 00000187 1F                          pop ds
   530 00000188 61                          popa
   531 00000189 83C408                      add esp, 8
   532 0000018C CF                          iret
   533                                  
   534                                  ; Here is the definition of our BSS section. Right now, we'll use
   535                                  ; it just to store the stack. Remember that a stack actually grows
   536                                  ; downwards, so we declare the size of the data before declaring
   537                                  ; the identifier '_sys_stack'
   538                                  SECTION .bss
   539 00000000 <res 00002000>              resb 8192               ; This reserves 8KBytes of memory here
   540                                  _sys_stack:
