<?xml version="1.0"?>
<analyzerinfo checksum="891750285">
        <error id="AssignmentAddressToInteger" severity="portability" msg="Assigning a pointer to an integer is not portable." verbose="Assigning a pointer to an integer (int/long/etc) is not portable across different platforms and compilers. For example in 32-bit Windows and linux they are same width, but in 64-bit Windows and linux they are of different width. In worst case you end up assigning 64-bit address to 32-bit integer. The safe way is to store addresses only in pointer types (or typedefs like uintptr_t)." cwe="758">
            <location file0="C:\Users\jaked\Documents\GitHub\JSD-OS\kernel\task.c" file="C:\Users\jaked\Documents\GitHub\JSD-OS\kernel\task.c" line="71"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;t-&gt;user_stack_top&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;t-&gt;user_stack_top&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467">
            <location file0="C:\Users\jaked\Documents\GitHub\JSD-OS\kernel\task.c" file="C:\Users\jaked\Documents\GitHub\JSD-OS\kernel\task.c" line="58"/>
            <symbol>t-&gt;user_stack_top</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/memorymanager.h:11:23" call-funcname="memmanager_virtual_alloc" call-argnr="1" filename="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.c" linenr="81" call-argexpr="NULL" call-argvaluetype="0" call-argvalue="0"/>  </FileInfo>
  <FileInfo check="Bounds checking">
    <ArraySize array="running_tasks" size="3"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/filesystem.h:69:15" my-argnr="1" my-argname="f" filename="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/filesystem.h" linenr="71"/>
    <unsafe-usage my-id="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.c:54:6" my-argnr="1" my-argname="t" filename="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.c" linenr="56"/>
    <unsafe-usage my-id="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.h:37:22" my-argnr="1" my-argname="p" filename="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.c" linenr="67"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/filesystem.h:69:15" my-argnr="1" my-argname="f" filename="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/filesystem.h" linenr="71"/>
    <unsafe-usage my-id="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.h:37:22" my-argnr="1" my-argname="p" filename="C:/Users/jaked/Documents/GitHub/JSD-OS/kernel/task.c" linenr="67"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="get_active_process" lineNumber="21"/>
    <functiondecl functionName="task_is_running" lineNumber="26"/>
    <functiondecl functionName="this_task_is_active" lineNumber="31"/>
    <functiondecl functionName="run_next_task" lineNumber="36"/>
    <functiondecl functionName="setup_first_task" lineNumber="45"/>
    <functiondecl functionName="start_user_process" lineNumber="54"/>
    <functiondecl functionName="spawn_process" lineNumber="63"/>
    <functiondecl functionName="switch_to_task" lineNumber="121"/>
    <functioncall functionName="FORMAT_FAT32"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="active_process"/>
    <functioncall functionName="address_space"/>
    <functioncall functionName="asm"/>
    <functioncall functionName="entry_point"/>
    <functioncall functionName="esp"/>
    <functioncall functionName="get_page_directory"/>
    <functioncall functionName="if"/>
    <functioncall functionName="l"/>
    <functioncall functionName="load_elf"/>
    <functioncall functionName="lock_interrupts"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memmanager_destroy_memory_space"/>
    <functioncall functionName="memmanager_enter_memory_space"/>
    <functioncall functionName="memmanager_get_physical"/>
    <functioncall functionName="memmanager_new_memory_space"/>
    <functioncall functionName="memmanager_virtual_alloc"/>
    <functioncall functionName="newTask"/>
    <functioncall functionName="oldcr3"/>
    <functioncall functionName="p"/>
    <functioncall functionName="path"/>
    <functioncall functionName="pid"/>
    <functioncall functionName="return"/>
    <functioncall functionName="run_user_code"/>
    <functioncall functionName="running_tasks"/>
    <functioncall functionName="set_page_directory"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="start_user_process"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="switch_task"/>
    <functioncall functionName="switch_to_task"/>
    <functioncall functionName="task_is_running"/>
    <functioncall functionName="tc_block"/>
    <functioncall functionName="this_process"/>
    <functioncall functionName="this_task_is_active"/>
    <functioncall functionName="uint32_t"/>
    <functioncall functionName="unlock_interrupts"/>
  </FileInfo>
</analyzerinfo>
