<?xml version="1.0"?>
<analyzerinfo checksum="3622087350">
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;object-&gt;hash_table==NULL&apos; is redundant or there is possible null pointer dereference: object-&gt;hash_table." verbose="Either the condition &apos;object-&gt;hash_table==NULL&apos; is redundant or there is possible null pointer dereference: object-&gt;hash_table." cwe="476" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="269" column="39" info="Null pointer dereference"/>
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="265" column="27" info="Assuming that condition &apos;object-&gt;hash_table==NULL&apos; is not redundant"/>
            <symbol>object-&gt;hash_table</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;num_pages&apos; shadows outer variable" verbose="Local variable &apos;num_pages&apos; shadows outer variable" cwe="398" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="189" column="13" info="Shadow variable"/>
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="145" column="11" info="Shadowed declaration"/>
            <symbol>num_pages</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="255" column="61"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="258" column="57"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="264" column="59"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="272" column="57"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="276" column="62"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="282" column="63"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="285" column="71"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="359" column="87"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined." verbose="&apos;object-&gt;base_address&apos; is of type &apos;void *&apos;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &apos;void *&apos; is a GNU C extension, which defines the &apos;sizeof(void)&apos; to be 1." cwe="467" file0="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c">
            <location file="C:\Users\jaked\source\repos\JSD-OS\kernel\elf.c" line="422" column="40"/>
            <symbol>object-&gt;base_address</symbol>
        </error>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:38:5" my-argnr="1" my-argname="file_identifer" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="42" col="12" value="0"/>
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:71:6" my-argnr="1" my-argname="file_header" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="73" col="5" value="0"/>
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:92:6" my-argnr="1" my-argname="file_header" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="97" col="24" value="0"/>
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:117:5" my-argnr="1" my-argname="object" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="343" col="5" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:38:5" my-argnr="1" my-argname="file_identifer" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="42" col="12" value="0"/>
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:71:6" my-argnr="1" my-argname="file_header" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="73" col="5" value="0"/>
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:92:6" my-argnr="1" my-argname="file_header" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="97" col="24" value="0"/>
    <unsafe-usage my-id="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c:117:5" my-argnr="1" my-argname="object" file="C:/Users/jaked/source/repos/JSD-OS/kernel/elf.c" line="343" col="5" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="elf_is_readable" lineNumber="38"/>
    <functiondecl functionName="elf_is_compatible" lineNumber="71"/>
    <functiondecl functionName="elf_get_size" lineNumber="92"/>
    <functiondecl functionName="load_elf" lineNumber="121"/>
    <functiondecl functionName="elf_process_dynamic_section" lineNumber="225"/>
    <functiondecl functionName="elf_read_symbols" lineNumber="341"/>
    <functiondecl functionName="elf_relocation_uses_symbol" lineNumber="368"/>
    <functiondecl functionName="elf_process_relocation_section" lineNumber="383"/>
    <functioncall functionName="ELF_header32"/>
    <functioncall functionName="ELF_ident"/>
    <functioncall functionName="ELF_program_header32"/>
    <functioncall functionName="ELF_rel32"/>
    <functioncall functionName="NULL"/>
    <functioncall functionName="PAGE_RW"/>
    <functioncall functionName="PAGE_SIZE"/>
    <functioncall functionName="address"/>
    <functioncall functionName="aligned_address"/>
    <functioncall functionName="base"/>
    <functioncall functionName="base_adress"/>
    <functioncall functionName="break"/>
    <functioncall functionName="d_ptr"/>
    <functioncall functionName="d_tag"/>
    <functioncall functionName="d_val"/>
    <functioncall functionName="default"/>
    <functioncall functionName="dynamic_object"/>
    <functioncall functionName="dynamic_section"/>
    <functioncall functionName="elf_get_size"/>
    <functioncall functionName="elf_is_compatible"/>
    <functioncall functionName="elf_is_readable"/>
    <functioncall functionName="elf_magic"/>
    <functioncall functionName="elf_process_dynamic_section"/>
    <functioncall functionName="elf_process_relocation_section"/>
    <functioncall functionName="elf_read_symbols"/>
    <functioncall functionName="elf_relocation_uses_symbol"/>
    <functioncall functionName="entry"/>
    <functioncall functionName="entry_point"/>
    <functioncall functionName="f"/>
    <functioncall functionName="file_header"/>
    <functioncall functionName="file_identifer"/>
    <functioncall functionName="file_size"/>
    <functioncall functionName="filesystem_close_file"/>
    <functioncall functionName="filesystem_open_file"/>
    <functioncall functionName="filesystem_read_file"/>
    <functioncall functionName="filesystem_seek_file"/>
    <functioncall functionName="flags"/>
    <functioncall functionName="for"/>
    <functioncall functionName="glob_data_symbol_map"/>
    <functioncall functionName="hashmap_insert"/>
    <functioncall functionName="hashmap_lookup"/>
    <functioncall functionName="i"/>
    <functioncall functionName="if"/>
    <functioncall functionName="info"/>
    <functioncall functionName="lib"/>
    <functioncall functionName="lib_name"/>
    <functioncall functionName="lib_set"/>
    <functioncall functionName="linker_data"/>
    <functioncall functionName="load_elf"/>
    <functioncall functionName="long"/>
    <functioncall functionName="magic"/>
    <functioncall functionName="malloc"/>
    <functioncall functionName="max_address"/>
    <functioncall functionName="mem_size"/>
    <functioncall functionName="memcmp"/>
    <functioncall functionName="memcpy"/>
    <functioncall functionName="memmanager_set_page_flags"/>
    <functioncall functionName="memmanager_virtual_alloc"/>
    <functioncall functionName="memset"/>
    <functioncall functionName="min_address"/>
    <functioncall functionName="name"/>
    <functioncall functionName="num_pages"/>
    <functioncall functionName="num_segments"/>
    <functioncall functionName="object"/>
    <functioncall functionName="offset"/>
    <functioncall functionName="path"/>
    <functioncall functionName="pg_header"/>
    <functioncall functionName="pgh_entries"/>
    <functioncall functionName="plt_relocation_addr"/>
    <functioncall functionName="plt_relocation_entries"/>
    <functioncall functionName="printf"/>
    <functioncall functionName="relocation_addr"/>
    <functioncall functionName="relocation_entries"/>
    <functioncall functionName="relocation_type"/>
    <functioncall functionName="return"/>
    <functioncall functionName="section_index"/>
    <functioncall functionName="segment"/>
    <functioncall functionName="size"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="string_table"/>
    <functioncall functionName="switch"/>
    <functioncall functionName="symbol_index"/>
    <functioncall functionName="symbol_map"/>
    <functioncall functionName="symbol_name"/>
    <functioncall functionName="symbol_table_size"/>
    <functioncall functionName="symbol_val"/>
    <functioncall functionName="type"/>
    <functioncall functionName="uint8_t"/>
    <functioncall functionName="user"/>
    <functioncall functionName="userspace"/>
    <functioncall functionName="val"/>
    <functioncall functionName="value"/>
    <functioncall functionName="virtual_address"/>
    <functioncall functionName="void"/>
  </FileInfo>
</analyzerinfo>
